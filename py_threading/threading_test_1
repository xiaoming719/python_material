# -*- coding: utf-8 -*-
"""
Python3
Spyder Editor:xiaoming
time:2018.3.8/17.47
describe:This is a threading_test_1 script file.
Website:https://www.cnblogs.com/fnng/p/3670789.html*****http://www.cnblogs.com/fnng/p/3691053.html
"""
##################################     test-1     ##########################
from time import ctime,sleep

def music():
    for i in range(2):
        print ("I was listening to music. %s" %ctime())
        sleep(1)

def move():
    for i in range(2):
        print ("I was at the movies! %s" %ctime())
        sleep(5)

if __name__ == '__main__':
    music()
    move()
    print ("all over %s" %ctime())  
    
    
##################################     test-2     ##########################
#coding=utf-8
import threading
from time import ctime,sleep

def music(func):
    for i in range(2):
        print ("I was listening to %s. %s" %(func,ctime()))
        sleep(1)

def move(func):
    for i in range(2):
        print ("I was at the %s! %s" %(func,ctime()))
        sleep(5)

if __name__ == '__main__':
    music(u'爱情买卖')
    move(u'阿凡达')

    print ("all over %s" %ctime())
    
 
##################################     test-3     ##########################
#coding=utf-8
import threading
from time import ctime,sleep

def music(func):
    for i in range(2):
        print ("I was listening to %s. %s" %(func,ctime()))
        sleep(1)

def move(func):
    for i in range(2):
        print ("I was at the %s! %s" %(func,ctime()))
        sleep(5)

threads = []
t1 = threading.Thread(target=music,args=(u'爱情买卖',))
threads.append(t1)
t2 = threading.Thread(target=move,args=(u'阿凡达',))
threads.append(t2)

if __name__ == '__main__':
    for t in threads:
        t.setDaemon(True)
        t.start()

    print ("all over %s" %ctime())
 
 
 
##################################     test-4     ##########################
#coding=utf-8
import threading
from time import ctime,sleep

def music(func):
    for i in range(2):
        print ("I was listening to %s. %s" %(func,ctime()))
        sleep(1)

def move(func):
    for i in range(2):
        print ("I was at the %s! %s" %(func,ctime()))
        sleep(5)

threads = []
t1 = threading.Thread(target=music,args=(u'爱情买卖',))
threads.append(t1)
t2 = threading.Thread(target=move,args=(u'阿凡达',))
threads.append(t2)

if __name__ == '__main__':
    for t in threads:
        t.setDaemon(True)
        t.start()
    
    t.join()
    print ("all over %s" %ctime())
 
 
##################################     test-5     ##########################
#coding=utf-8
from time import sleep, ctime 
import threading

def muisc(func):
    for i in range(2):
        print ('Start playing： %s! %s' %(func,ctime()))
        sleep(2)
 
def move(func):
    for i in range(2):
        print ('Start playing： %s! %s' %(func,ctime()))
        sleep(5)

def player(name):
    r = name.split('.')[1]
    if r == 'mp3':
        muisc(name)
    else:
        if r == 'mp4':
            move(name)
        else:
            print ('error: The format is not recognized!')

list = ['爱情买卖.mp3','阿凡达.mp4']

threads = []
files = range(len(list))

#创建线程
for i in files:
    t = threading.Thread(target=player,args=(list[i],))
    threads.append(t)

if __name__ == '__main__': 
    #启动线程
    for i in files:
        threads[i].start() 
    for i in files:
        threads[i].join()

    #主线程
    print ('end:%s' %ctime())
##################################     test-6     ##########################
#coding=utf-8
from time import sleep, ctime 
import threading

def super_player(file,time):
    for i in range(2):
        print ('Start playing： %s! %s' %(file,ctime()))
        sleep(time)

#播放的文件与播放时长
dict = {'爱情买卖.mp3':3,'阿凡达.mp4':5,'我和你.mp3':4}

threads = []
files = range(len(dict))

#创建线程
for file,time in dict.items():
    t = threading.Thread(target=super_player,args=(file,time))
    threads.append(t)

if __name__ == '__main__': 
    #启动线程
    for i in files:
        threads[i].start() 
    for i in files:
        threads[i].join()

    #主线程
    print ('end:%s' %ctime())
##################################     test-7     ##########################
#coding=utf-8
import threading 
from time import sleep, ctime 
 
class MyThread(threading.Thread):

    def __init__(self,func,args,name=''):
        threading.Thread.__init__(self)
        self.name=name
        self.func=func
        self.args=args
    
    def run(self):
        self.func(*self.args)


def super_play(file,time):
    for i in range(2):
        print ('Start playing： %s! %s' %(file,ctime()))
        sleep(time)


dict = {'爱情买卖.mp3':3,'阿凡达.mp4':5}

#创建线程
threads = []
files = range(len(dict))

for k,v in dict.items():
    t = MyThread(super_play,(k,v),super_play.__name__)
    threads.append(t)        

if __name__ == '__main__': 
    #启动线程
    for i in files:
        threads[i].start() 
    for i in files:
        threads[i].join()

    #主线程
    print ('end:%s' %ctime())
 
 
 
 
 
    
    
